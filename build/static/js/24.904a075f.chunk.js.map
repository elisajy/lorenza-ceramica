{"version":3,"file":"static/js/24.904a075f.chunk.js","mappings":"+MAOA,MAmBA,EAnB2BA,MACvBC,EAAAA,EAAAA,YAAU,KACNC,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,GAEhD,KAGCC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAF,SAAA,EACAF,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAeC,IAAI,qBAC7BJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACI,QAAQ,OAAMN,SAAA,EACfF,EAAAA,EAAAA,KAACS,EAAAA,GAAM,KACPT,EAAAA,EAAAA,KAACU,EAAAA,EAAkB,CAACC,OAAO,yB,gLCE/C,MAyDA,EAzD2BC,IAAwB,IAAvB,OAAED,GAAeC,EAC3C,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC3BC,GAAWC,EAAAA,EAAAA,OAEjBtB,EAAAA,EAAAA,YAAU,KACRuB,MAAM,mCAA+C,iBAAXP,EAA4BA,EAAS,YAAYA,OACxFQ,MAAMC,GAAaA,EAASC,SAC5BF,MAAMN,GAASC,EAAQD,IAAM,GAE/B,IAsCH,OACEb,EAAAA,EAAAA,KAACI,EAAAA,EAAG,CAACkB,UAAU,sBAAsBC,WAAW,UAAUC,MAAM,QAAOtB,UACrEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACmB,WAAW,UAAUf,QAAQ,OAAOiB,cAAc,SAASC,WAAW,SAAQxB,SAAA,EACjFF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAACL,UAAU,QAAQM,SAAS,MAAMC,QAAQ,SAAQ3B,SAAES,EAAOmB,gBAtChEjB,EAAKkB,KAAKC,IAEb7B,EAAAA,EAAAA,MAAC8B,EAAAA,EAAI,CAAYC,QAAQ,WAAWC,IAAI,OAAOX,MAAM,QAAQD,WAAW,UAAUa,cAAc,OAAMlC,SAAA,EACpGF,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CAACd,WAAW,UAASrB,UAC9BF,EAAAA,EAAAA,KAACsC,EAAAA,EAAI,CAACC,MAAM,OAAMrC,SAAE8B,EAAEQ,WAExBrC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACkB,UAAU,yBAAwBpB,SAAA,EACrCF,EAAAA,EAAAA,KAACyC,EAAAA,EAAK,CACJnB,UAAU,yBACVoB,UAAU,QACVrC,IAAK2B,EAAEW,UACPpC,IAAI,UAENJ,EAAAA,EAAAA,MAACyC,EAAAA,EAAK,CAACtB,UAAU,uBAAuBO,QAAQ,OAAM3B,SAAA,EACpDF,EAAAA,EAAAA,KAAC6C,EAAAA,EAAQ,CAAA3C,UACPF,EAAAA,EAAAA,KAACsC,EAAAA,EAAI,CAAChB,UAAU,oBAAoBwB,GAAG,IAAIP,MAAM,QAAOrC,SACrD8B,EAAEe,iBAGP/C,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAACC,UAAU,WAAU/C,UAC9BF,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,CACLhB,QAAQ,OACRK,MAAM,QACNY,QAASA,IAAMnC,EAAS,IAAe,iBAAXL,EAA4BA,EAAS,sBAAsBqB,EAAEoB,QAAQlD,SAClG,wBAtBE8B,EAAEqB,UAuCX,C,yLCnEV,MAAMhB,GAAaiB,EAAAA,EAAAA,IACjB,SAAqBC,EAAOC,GAC1B,MAAM,UAAElC,KAAcmC,GAASF,EACzBG,GAASC,EAAAA,EAAAA,KACf,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAOC,IACP,CACEN,MACAlC,WAAWyC,EAAAA,EAAAA,IAAG,sBAAuBzC,GACrC0C,MAAON,EAAOO,UACXR,GAGT,G","sources":["pages/inspirations/InspirationsLayout.tsx","pages/layout/sidebar/InspirationSidebar.tsx","../node_modules/@chakra-ui/react/dist/esm/card/card-header.mjs"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport pageBgDivider from \"../../assets/images/page-bg-divider.png\";\r\nimport InspirationSidebar from \"../layout/sidebar/InspirationSidebar\";\r\nimport { Box } from \"@chakra-ui/react\";\r\n\r\n\r\nconst InspirationsLayout = () => {\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Box>\r\n                <img src={pageBgDivider} alt=\"page-bg-divider\" />\r\n                <Box display=\"flex\">\r\n                    <Outlet />\r\n                    <InspirationSidebar origin=\"inspirations\"></InspirationSidebar>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InspirationsLayout;","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Heading,\r\n  Image,\r\n  Stack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\n\r\ninterface Props {\r\n  // inspirations | commercial | residential\r\n  origin: string;\r\n}\r\n\r\nconst InspirationSidebar = ({ origin }: Props) => {\r\n  const [data, setData] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/${origin === 'inspirations' ? origin : `projects-${origin}`}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const inspirationList = () => {\r\n    return data.map((x: any) => {\r\n      return (\r\n        <Card key={x.id} variant=\"unstyled\" gap=\"10px\" width=\"280px\" background=\"#FAFAFA\" paddingBottom=\"20px\">\r\n          <CardHeader background=\"#FAFAFA\">\r\n            <Text color=\"gray\">{x.title}</Text>\r\n          </CardHeader>\r\n          <Box className=\"sidebar-card-container\">\r\n            <Image\r\n              className=\"sidebar-card-thumbnail\"\r\n              objectFit=\"cover\"\r\n              src={x.thumbnail}\r\n              alt=\"post\"\r\n            />\r\n            <Stack className=\"sidebar-card-content\" padding=\"10px\">\r\n              <CardBody>\r\n                <Text className=\"sidebar-card-desc\" py=\"2\" color=\"white\">\r\n                  {x.description}\r\n                </Text>\r\n              </CardBody>\r\n              <CardFooter alignSelf=\"flex-end\">\r\n                <Button\r\n                  variant=\"link\"\r\n                  color=\"white\"\r\n                  onClick={() => navigate(`/${origin === 'inspirations' ? origin : 'projects'}/article/${x.path}`)}\r\n                >\r\n                  READ MORE\r\n                </Button>\r\n              </CardFooter>\r\n            </Stack>\r\n          </Box>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box className=\"inspiration-sidebar\" background=\"#FAFAFA\" width=\"500px\">\r\n      <Box background=\"#FAFAFA\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n        <Heading className=\"title\" fontSize=\"2xl\" padding=\"20px 0\">{origin.toUpperCase()}</Heading>\r\n        {inspirationList()}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InspirationSidebar;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardHeader };\n"],"names":["InspirationsLayout","useEffect","window","scrollTo","top","behavior","_jsx","_Fragment","children","_jsxs","Box","src","pageBgDivider","alt","display","Outlet","InspirationSidebar","origin","_ref","data","setData","useState","navigate","useNavigate","fetch","then","response","json","className","background","width","flexDirection","alignItems","Heading","fontSize","padding","toUpperCase","map","x","Card","variant","gap","paddingBottom","CardHeader","Text","color","title","Image","objectFit","thumbnail","Stack","CardBody","py","description","CardFooter","alignSelf","Button","onClick","path","id","forwardRef","props","ref","rest","styles","useCardStyles","jsx","chakra","div","cx","__css","header"],"sourceRoot":""}