{"version":3,"file":"static/js/346.d553a571.chunk.js","mappings":"4QAwC0BA,EAAAA,IACIC,EAAAA,IACDC,EAAAA,IACGC,EAAAA,IACFC,EAAAA,IAL9B,MAkEA,EA1DuBC,KAEfC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UAEAF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,aAAc,CAAC,GAAIC,eAAa,EAAAH,SACtCI,EAAAA,IAAsC,IAAvBA,EAAAA,GAAYC,OACtBD,EAAAA,GAAYE,KAAKC,IACRC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAT,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAAE,UACIQ,EAAAA,EAAAA,MAACE,EAAAA,EAAe,CAAAV,SAAA,EACZF,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACY,GAAG,OAAOC,KAAK,IAAIC,UAAU,OAAMb,UAUpCF,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACC,SAAU,KAAMC,WAAY,IAAKC,MAAO,UAAUjB,SAAEO,EAAKW,UAG/DX,EAAKY,MAA6B,IAArBZ,EAAKY,KAAKd,QACnBP,EAAAA,EAAAA,KAACsB,EAAAA,EAAa,IAEd,WAIhBtB,EAAAA,EAAAA,KAACuB,EAAAA,EAAc,CAACC,GAAI,EAAEtB,SAEdO,EAAKY,MAA6B,IAArBZ,EAAKY,KAAKd,OACnBE,EAAKY,KAAKb,KAAKiB,IACJzB,EAAAA,EAAAA,KAAA,OAAAE,UACHF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAO,CAACC,GAAIF,EAAEG,MAAOC,MAAOC,IAA+C,IAA9C,SAAEC,EAAQ,UAAEC,EAAS,gBAAEC,GAAiBH,EAClE,MAAO,CACHZ,WAAYa,EAAW,OAAS,GAChCZ,MAAOa,EAAY,MAAQ,QAC3BE,mBAAoBD,EAAkB,QAAU,GACnD,EACH/B,UACEF,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACC,SAAU,KAAME,MAAO,UAAUjB,SAAEuB,EAAEL,cAIvD,YAMlB,SC3EtB,EAhBuBe,KAEfnC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACmC,UAAU,kBAAiBlC,UAS5BF,EAAAA,EAAAA,KAACD,EAAc,M,cCZ3B,MAwBA,EAxBiBsC,KASTrC,EAAAA,EAAAA,KAAAsC,EAAAA,SAAA,CAAApC,UACIQ,EAAAA,EAAAA,MAACT,EAAAA,EAAG,CAACmC,UAAU,eAAclC,SAAA,EACzBF,EAAAA,EAAAA,KAACmC,EAAc,KAEfzB,EAAAA,EAAAA,MAACT,EAAAA,EAAG,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAAA,OAAKuC,IAAKC,EAAeC,IAAI,qBAC7BzC,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,eAAclC,UACzBF,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,a","sources":["pages/layout/sidebar/SidebarContent.tsx","pages/layout/sidebar/Sidebar.tsx","pages/products/Products.tsx"],"sourcesContent":["import {\r\n    Accordion,\r\n    AccordionButton,\r\n    AccordionIcon,\r\n    AccordionItem,\r\n    AccordionPanel,\r\n    Box,\r\n    BoxProps,\r\n    Button,\r\n    Center,\r\n    Menu,\r\n    MenuButton,\r\n    MenuDivider,\r\n    MenuGroup,\r\n    MenuItem,\r\n    MenuList,\r\n    Text\r\n} from '@chakra-ui/react';\r\nimport { IconType } from 'react-icons';\r\nimport {\r\n    FiCompass,\r\n    FiHome,\r\n    FiSettings,\r\n    FiStar,\r\n    FiTrendingUp\r\n} from 'react-icons/fi';\r\nimport \"./Sidebar.css\";\r\nimport { productMenu } from '../../../helper/HeaderMenu';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface SidebarProps extends BoxProps {\r\n    onClose: () => void\r\n}\r\n\r\ninterface LinkItemProps {\r\n    name: string\r\n    icon: IconType\r\n}\r\n\r\nconst LinkItems: Array<LinkItemProps> = [\r\n    { name: 'Home', icon: FiHome },\r\n    { name: 'Trending', icon: FiTrendingUp },\r\n    { name: 'Explore', icon: FiCompass },\r\n    { name: 'Favourites', icon: FiStar },\r\n    { name: 'Settings', icon: FiSettings },\r\n]\r\n\r\nconst SidebarContent = () => {\r\n    return (\r\n        <Box>\r\n\r\n            <Accordion defaultIndex={[0]} allowMultiple>\r\n                {productMenu && productMenu.length !== 0\r\n                    ? productMenu.map((item: any) => {\r\n                        return <AccordionItem>\r\n                            <h1>\r\n                                <AccordionButton>\r\n                                    <Box as='span' flex='1' textAlign='left'>\r\n                                        {/* <NavLink to={item.route} style={({ isActive, isPending, isTransitioning }) => {\r\n                                            return {\r\n                                                fontWeight: isActive ? \"bold\" : \"\",\r\n                                                color: isPending ? \"red\" : \"black\",\r\n                                                viewTransitionName: isTransitioning ? \"slide\" : \"\",\r\n                                            };\r\n                                        }}>\r\n                                            <span>{item.label}</span>\r\n                                        </NavLink> */}\r\n                                        <Text fontSize={'xl'} fontWeight={600} color={'#0c478a'}>{item.label}</Text>\r\n                                    </Box>\r\n                                    {\r\n                                        item.prds && item.prds.length !== 0 ?\r\n                                            <AccordionIcon />\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </AccordionButton>\r\n                            </h1>\r\n                            <AccordionPanel pb={4}>\r\n                                {\r\n                                    item.prds && item.prds.length !== 0 ?\r\n                                        item.prds.map((x: any) => {\r\n                                            return <div>\r\n                                                <NavLink to={x.route} style={({ isActive, isPending, isTransitioning }) => {\r\n                                                    return {\r\n                                                        fontWeight: isActive ? \"bold\" : \"\",\r\n                                                        color: isPending ? \"red\" : \"black\",\r\n                                                        viewTransitionName: isTransitioning ? \"slide\" : \"\",\r\n                                                    };\r\n                                                }}>\r\n                                                    <Text fontSize={'lg'} color={'#143e6e'}>{x.label}</Text>\r\n                                                </NavLink>\r\n                                            </div>\r\n                                        }) :\r\n                                        null\r\n                                }\r\n                            </AccordionPanel>\r\n                        </AccordionItem>\r\n\r\n                    })\r\n                    : null}\r\n            </Accordion>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SidebarContent","import {\r\n    Box\r\n} from '@chakra-ui/react'\r\nimport \"./Sidebar.css\"\r\nimport SidebarContent from './SidebarContent'\r\n\r\n\r\n\r\nconst ProductSidebar = () => {\r\n    return (\r\n        <Box className='product-sidebar'>\r\n            {/* <Link\r\n                as={NavLink}\r\n                _activeLink={{\r\n                    color: useColorModeValue('violet.50', 'white'),\r\n                    bgColor: useColorModeValue('violet.5', 'gray.700')\r\n                }}>\r\n                Text\r\n            </Link> */}\r\n            <SidebarContent></SidebarContent>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProductSidebar;","import {\r\n    Box\r\n} from \"@chakra-ui/react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ProductSidebar from \"../layout/sidebar/Sidebar\";\r\nimport pageBgDivider from \"../../assets/images/page-bg-divider.png\";\r\n\r\nconst Products = () => {\r\n    // useEffect(() => {\r\n    //   fetch(`${process.env.REACT_APP_API_URL}/faq`)\r\n    //     .then((response) => response.json())\r\n    //     .then((data) => setFaq(data));\r\n    //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    // }, []);\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"product-page\">\r\n                <ProductSidebar></ProductSidebar>\r\n                {/* replace by product render */}\r\n                <Box>\r\n                    <img src={pageBgDivider} alt=\"page-bg-divider\" />\r\n                    <div className=\"product-main\">\r\n                        <Outlet />\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["FiHome","FiTrendingUp","FiCompass","FiStar","FiSettings","SidebarContent","_jsx","Box","children","Accordion","defaultIndex","allowMultiple","productMenu","length","map","item","_jsxs","AccordionItem","AccordionButton","as","flex","textAlign","Text","fontSize","fontWeight","color","label","prds","AccordionIcon","AccordionPanel","pb","x","NavLink","to","route","style","_ref","isActive","isPending","isTransitioning","viewTransitionName","ProductSidebar","className","Products","_Fragment","src","pageBgDivider","alt","Outlet"],"sourceRoot":""}