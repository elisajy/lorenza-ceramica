{"version":3,"file":"static/js/252.963f3efc.chunk.js","mappings":"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","sources":["pages/projects/Projects.tsx","../node_modules/@chakra-ui/react/dist/esm/card/card-header.mjs"],"sourcesContent":["import { Box, Button, Card, CardBody, CardFooter, CardHeader, Heading, Image, SimpleGrid, Stack, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Projects.css\";\r\nimport ResponsivePagination from \"react-responsive-pagination\";\r\n\r\nconst Projects = () => {\r\n  const [data, setData] = useState([]);\r\n  const pageSize = 6;\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"commercial\");\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const totalPages = useMemo(() => Math.ceil(totalData.length / pageSize), [totalData]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Handler to update the state with the new window width\r\n    const handleResize = () => {\r\n      setWidth(window.innerWidth);\r\n    };\r\n\r\n    // Add resize event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Call the handler immediately to set initial width\r\n    handleResize();\r\n\r\n    // Cleanup by removing the event listener on component unmount\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData(\"projects-commercial\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(totalData.slice((currentPage - 1) * pageSize, currentPage * pageSize));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const fetchData = (path: string) => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/${path}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(\r\n          data.slice(\r\n            (currentPage - 1) * pageSize,\r\n            currentPage * pageSize\r\n          )\r\n        );\r\n        setTotalData(data);\r\n      });\r\n  };\r\n\r\n  const projectList = () => {\r\n    return data.map((x: any) => {\r\n      return (\r\n        <Card\r\n          key={x.id}\r\n          variant=\"unstyled\"\r\n          gap=\"10px\"\r\n          className=\"card-box\"\r\n        >\r\n          <CardHeader display=\"flex\" justifyContent=\"start\">\r\n            <Heading className=\"title card-title\" size=\"md\">\r\n              {x.title}\r\n            </Heading>\r\n          </CardHeader>\r\n          <Box className=\"card-container\">\r\n            <Image\r\n              className=\"card-thumbnail\"\r\n              objectFit=\"cover\"\r\n              src={x.thumbnail}\r\n              alt=\"post\"\r\n              onClick={() => navigate(`/projects/${x.path}?origin=${selectedTab}`)}\r\n            />\r\n            <Stack className=\"card-content\" padding=\"10px\">\r\n              <CardBody\r\n                onClick={() => navigate(`/projects/${x.path}?origin=${selectedTab}`)}\r\n              >\r\n                <Text className=\"card-desc\" fontSize={{ sm:\"12px\", md: \"14px\", lg: \"16px\" }} py=\"2\" color=\"white\">{x.description}</Text>\r\n              </CardBody>\r\n              <CardFooter alignSelf=\"flex-end\">\r\n                <Button\r\n                  variant=\"link\"\r\n                  color=\"white\"\r\n                  onClick={() => navigate(`/projects/${x.path}?origin=${selectedTab}`)}\r\n                >\r\n                  READ MORE\r\n                </Button>\r\n              </CardFooter>\r\n            </Stack>\r\n          </Box>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <Heading className=\"title\" size=\"lg\" alignSelf=\"center\" marginTop=\"30px\">\r\n        <Button\r\n          variant=\"link\"\r\n          className={selectedTab === 'commercial' ? \"title\" : \"unselected\"}\r\n          onClick={() => {\r\n            fetchData(\"projects-commercial\");\r\n            setSelectedTab('commercial');\r\n          }}\r\n        >\r\n          COMMERCIAL\r\n        </Button>{\" \"}\r\n        |{\" \"}\r\n        <Button\r\n          variant=\"link\"\r\n          className={selectedTab === 'residential' ? \"title\" : \"unselected\"}\r\n          onClick={() => {\r\n            fetchData(\"projects-residential\");\r\n            setSelectedTab('residential');\r\n          }}\r\n        >\r\n          RESIDENTIAL\r\n        </Button>\r\n      </Heading>\r\n      <Box maxWidth=\"8xl\" margin={width < 992 ? \"40px 10px\" : \"40px 80px\"} alignSelf=\"center\">\r\n        {data.length > 0 ? (\r\n          <SimpleGrid className=\"card-grid\" rowGap=\"50px\" columnGap=\"80px\"  columns={2}>\r\n            {projectList()}\r\n          </SimpleGrid>\r\n        ) : (\r\n          <Text>No post yet.</Text>\r\n        )}\r\n        <ResponsivePagination\r\n          total={totalPages}\r\n          current={currentPage}\r\n          onPageChange={(page) => handlePageChange(page)}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardHeader = forwardRef(\n  function CardHeader2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__header\", className),\n        __css: styles.header,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardHeader };\n"],"names":["Projects","data","setData","useState","selectedTab","setSelectedTab","currentPage","setCurrentPage","totalData","setTotalData","width","setWidth","window","innerWidth","totalPages","useMemo","Math","ceil","length","navigate","useNavigate","useEffect","handleResize","addEventListener","removeEventListener","fetchData","slice","path","fetch","then","response","json","_jsxs","Box","display","flexDirection","children","Heading","className","size","alignSelf","marginTop","_jsx","Button","variant","onClick","maxWidth","margin","SimpleGrid","rowGap","columnGap","columns","map","x","Card","gap","CardHeader","justifyContent","title","Image","objectFit","src","thumbnail","alt","Stack","padding","CardBody","Text","fontSize","sm","md","lg","py","color","description","CardFooter","id","ResponsivePagination","total","current","onPageChange","page","handlePageChange","forwardRef","props","ref","rest","styles","useCardStyles","jsx","chakra","div","cx","__css","header"],"sourceRoot":""}