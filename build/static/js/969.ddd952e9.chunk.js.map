{"version":3,"file":"static/js/969.ddd952e9.chunk.js","mappings":"4QAcA,MAmEA,EAnEuBA,KACnB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAc,IASlD,OAPAC,EAAAA,EAAAA,YAAU,KACNC,MAAM,oDACDC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMG,GAASP,EAAcO,IAAM,GAEzC,KAGCC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAC,UACAF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,aAAc,CAAC,GAAIC,eAAa,EAAAH,SACtCX,GAAoC,IAAtBA,EAAWe,OACpBf,EAAWgB,KAAKC,IACPC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAR,SAAA,EACjBF,EAAAA,EAAAA,KAAA,MAAAE,UACIO,EAAAA,EAAAA,MAACE,EAAAA,EAAe,CAAAT,SAAA,EACZF,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACW,GAAG,OAAOC,KAAK,IAAIC,UAAU,OAAMZ,SACnCM,EAAKO,MAA6B,IAArBP,EAAKO,KAAKT,QAClBN,EAAAA,EAAAA,KAACgB,EAAAA,GAAO,CAACC,GAAIT,EAAKU,MAAOC,MAAOC,IAA+C,IAA9C,SAAEC,EAAQ,UAAEC,EAAS,gBAAEC,GAAiBH,EACvE,MAAO,CACHI,WAAYH,EAAW,OAAS,GAChCI,MAAOH,EAAY,MAAQ,QAC3BI,mBAAoBH,EAAkB,QAAU,GACnD,EACHrB,UACEF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,SAAU,KAAMJ,WAAY,IAAKC,MAAO,UAAUvB,SAAEM,EAAKqB,WAEjE7B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,SAAU,KAAMJ,WAAY,IAAKC,MAAO,UAAUvB,SAAEM,EAAKqB,UAGrErB,EAAKO,MAA6B,IAArBP,EAAKO,KAAKT,QACnBN,EAAAA,EAAAA,KAAC8B,EAAAA,EAAa,IAEd,WAIhB9B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAc,CAACC,GAAI,EAAE9B,SAEdM,EAAKO,MAA6B,IAArBP,EAAKO,KAAKT,OACnBE,EAAKO,KAAKR,KAAK0B,IACJjC,EAAAA,EAAAA,KAAA,OAAAE,UACHF,EAAAA,EAAAA,KAACgB,EAAAA,GAAO,CAACC,GAAIgB,EAAEf,MAAOC,MAAOe,IAA+C,IAA9C,SAAEb,EAAQ,UAAEC,EAAS,gBAAEC,GAAiBW,EAClE,MAAO,CACHV,WAAYH,EAAW,OAAS,GAChCI,MAAOJ,EAAW,UAAY,UAC9BK,mBAAoBH,EAAkB,QAAU,GACnD,EACHrB,UACEF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACC,SAAU,KAAK1B,SAAG+B,EAAEJ,cAItC,YAMlB,QAER,EC7Dd,EARuBM,KAEfnC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACmC,UAAU,kBAAiBlC,UAC5BF,EAAAA,EAAAA,KAACV,EAAc,MCmB3B,EAvBiB+C,MACb3C,EAAAA,EAAAA,YAAU,KACN4C,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UAAW,GAEhD,KAGCzC,EAAAA,EAAAA,KAAA0C,EAAAA,SAAA,CAAAxC,UACIO,EAAAA,EAAAA,MAACR,EAAAA,EAAG,CAACmC,UAAU,eAAclC,SAAA,EACzBF,EAAAA,EAAAA,KAACmC,EAAc,KAEf1B,EAAAA,EAAAA,MAACR,EAAAA,EAAG,CAAAC,SAAA,EAEAF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAACwB,OAAQ,QAASC,gBAAiB,cAC/C5C,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,eAAclC,UACzBF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAM,c","sources":["pages/layout/sidebar/SidebarContent.tsx","pages/layout/sidebar/Sidebar.tsx","pages/products/Products.tsx"],"sourcesContent":["import {\r\n    Accordion,\r\n    AccordionButton,\r\n    AccordionIcon,\r\n    AccordionItem,\r\n    AccordionPanel,\r\n    Box,\r\n    Text\r\n} from '@chakra-ui/react';\r\nimport \"./Sidebar.css\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nconst SidebarContent = () => {\r\n    const [categories, setCategories] = useState<any>([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${process.env.REACT_APP_API_URL}/productsSideNavs`)\r\n            .then((response) => response.json())\r\n            .then((data) => setCategories(data));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <Box>\r\n            <Accordion defaultIndex={[0]} allowMultiple>\r\n                {categories && categories.length !== 0\r\n                    ? categories.map((item: any) => {\r\n                        return <AccordionItem>\r\n                            <h1>\r\n                                <AccordionButton>\r\n                                    <Box as='span' flex='1' textAlign='left'>\r\n                                        {item.prds && item.prds.length === 0\r\n                                            ? <NavLink to={item.route} style={({ isActive, isPending, isTransitioning }) => {\r\n                                                return {\r\n                                                    fontWeight: isActive ? \"bold\" : \"\",\r\n                                                    color: isPending ? \"red\" : \"black\",\r\n                                                    viewTransitionName: isTransitioning ? \"slide\" : \"\",\r\n                                                };\r\n                                            }}>\r\n                                                <Text fontSize={'xl'} fontWeight={600} color={'#0c478a'}>{item.label}</Text>\r\n                                            </NavLink>\r\n                                            : <Text fontSize={'xl'} fontWeight={600} color={'#0c478a'}>{item.label}</Text>}\r\n                                    </Box>\r\n                                    {\r\n                                        item.prds && item.prds.length !== 0 ?\r\n                                            <AccordionIcon />\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </AccordionButton>\r\n                            </h1>\r\n                            <AccordionPanel pb={4}>\r\n                                {\r\n                                    item.prds && item.prds.length !== 0 ?\r\n                                        item.prds.map((x: any) => {\r\n                                            return <div>\r\n                                                <NavLink to={x.route} style={({ isActive, isPending, isTransitioning }) => {\r\n                                                    return {\r\n                                                        fontWeight: isActive ? \"bold\" : \"\",\r\n                                                        color: isActive ? \"#0c478a\" : \"#a9a9a9\",\r\n                                                        viewTransitionName: isTransitioning ? \"slide\" : \"\",\r\n                                                    };\r\n                                                }}>\r\n                                                    <Text fontSize={'lg'} >{x.label}</Text>\r\n                                                </NavLink>\r\n                                            </div>\r\n                                        }) :\r\n                                        null\r\n                                }\r\n                            </AccordionPanel>\r\n                        </AccordionItem>\r\n\r\n                    })\r\n                    : null}\r\n            </Accordion>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SidebarContent","import {\r\n    Box\r\n} from '@chakra-ui/react'\r\nimport \"./Sidebar.css\"\r\nimport SidebarContent from './SidebarContent'\r\n\r\n\r\n\r\nconst ProductSidebar = () => {\r\n    return (\r\n        <Box className='product-sidebar'>\r\n            <SidebarContent></SidebarContent>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ProductSidebar;","import {\r\n    Box\r\n} from \"@chakra-ui/react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport ProductSidebar from \"../layout/sidebar/Sidebar\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Products = () => {\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"product-page\">\r\n                <ProductSidebar></ProductSidebar>\r\n                {/* replace by product render */}\r\n                <Box>\r\n                    {/* <img src={pageBgDivider} alt=\"page-bg-divider\" /> */}\r\n                    <div style={{height: \"140px\", backgroundColor: \"#33557b\"}}></div>\r\n                    <div className=\"product-main\">\r\n                        <Outlet />\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n"],"names":["SidebarContent","categories","setCategories","useState","useEffect","fetch","then","response","json","data","_jsx","Box","children","Accordion","defaultIndex","allowMultiple","length","map","item","_jsxs","AccordionItem","AccordionButton","as","flex","textAlign","prds","NavLink","to","route","style","_ref","isActive","isPending","isTransitioning","fontWeight","color","viewTransitionName","Text","fontSize","label","AccordionIcon","AccordionPanel","pb","x","_ref2","ProductSidebar","className","Products","window","scrollTo","top","behavior","_Fragment","height","backgroundColor","Outlet"],"sourceRoot":""}