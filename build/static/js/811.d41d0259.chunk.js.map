{"version":3,"file":"static/js/811.d41d0259.chunk.js","mappings":"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","sources":["pages/products/ProductCategory.tsx","../node_modules/@chakra-ui/icons/dist/esm/ChevronRight.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-context.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-separator.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-item.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-link.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb.mjs"],"sourcesContent":["import {\r\n  Box,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Image,\r\n  SimpleGrid,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./Products.css\";\r\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\r\nimport { useEffect, useMemo, useState, useTransition } from \"react\";\r\nimport ResponsivePagination from \"react-responsive-pagination\";\r\n\r\nconst CategoryPage = () => {\r\n  const { category, subcategory } = useParams();\r\n  const [products, setProducts] = useState<any>([]);\r\n  const [isPending, startTransition] = useTransition();\r\n  const [categories, setCategories] = useState<any>([]);\r\n  const pageSize = window.innerWidth >= 1270 ? 15 : 14;\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const totalPages = useMemo(() => Math.ceil(totalData.length / pageSize), [totalData]);\r\n  const navigate = useNavigate();\r\n\r\n  const capitalizeFirstLetters = (string: any) => {\r\n    if (!!string) {\r\n      return string\r\n        .split(\" \")\r\n        .map((word: any) => word.charAt(0).toUpperCase() + word.slice(1))\r\n        .join(\" \");\r\n    } else {\r\n      return string;\r\n    }\r\n  };\r\n\r\n  const viewProductDetails = (name: any, code: any) => {\r\n    if (subcategory)\r\n      navigate(`/products/${category}/${subcategory}/${name}/${code}`);\r\n    else navigate(`/products/${category}/${name}/${code}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTransition(() => {\r\n      setProducts(null);\r\n      setCurrentPage(1);\r\n    });\r\n\r\n    filterProducts();\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}/productsSideNavs`)\r\n      .then((response) => response.json())\r\n      .then((data) => setCategories(data));\r\n  }, [startTransition, category, subcategory]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [products]);\r\n\r\n  const filterProducts = () => {\r\n    const current = 1;\r\n    fetch(\r\n      `${process.env.REACT_APP_API_URL}/products/${subcategory ?? category}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        startTransition(() => {\r\n          setTotalData(data);\r\n          setProducts(\r\n            data.slice(\r\n              (current - 1) * pageSize,\r\n              current * pageSize\r\n            )\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProducts(\r\n      totalData.slice(\r\n        (currentPage - 1) * pageSize,\r\n        currentPage * pageSize\r\n      )\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const formatUrl = () => {\r\n    if (!!subcategory) {\r\n      const sideNav = categories.find(\r\n        (x: any) => x.route === `/products/${category}`\r\n      );\r\n      if (sideNav)\r\n        return sideNav.prds.length > 0\r\n          ? sideNav.prds[0].route\r\n          : `/products/${category}/${subcategory}`;\r\n    }\r\n    return `/products/${category}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"category-title\">\r\n        <Breadcrumb\r\n          spacing=\"8px\"\r\n          separator={<ChevronRightIcon color=\"gray.500\" />}\r\n        >\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink href=\"/products/tiles/all-products\">\r\n              Products\r\n            </BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n\r\n          {!!category && (\r\n            <BreadcrumbItem>\r\n              <BreadcrumbLink href={formatUrl()}>\r\n                {capitalizeFirstLetters(category)}\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          )}\r\n\r\n          {!!subcategory && (\r\n            <BreadcrumbItem isCurrentPage>\r\n              <BreadcrumbLink href={`/products/${category}/${subcategory}`}>\r\n                {capitalizeFirstLetters(subcategory)}\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          )}\r\n        </Breadcrumb>\r\n      </Box>\r\n      {!isPending && (\r\n        <Box className=\"product-items-block\">\r\n          <SimpleGrid className=\"products-grid\" spacing=\"40px\">\r\n            {products && products.length !== 0 ? (\r\n              products.map((x: any) => {\r\n                return (\r\n                  <Card\r\n                    className=\"product-card-body \"\r\n                    borderRadius={\"lg\"}\r\n                    align=\"center\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() =>\r\n                      viewProductDetails(\r\n                        x.prdName,\r\n                        x.prdCode !== \"-\" ? x.prdCode : x.prdColor\r\n                      )\r\n                    }\r\n                  >\r\n                    <CardBody className=\"product-card\">\r\n                      <div className=\"prd-images\">\r\n                        {x.images && x.images.length > 0 ? (\r\n                          <Image\r\n                            className=\"prd-image-main image-item-prds2\"\r\n                            src={x.images[0]}\r\n                            alt={x.prdName}\r\n                            borderRadius={\"10px 10px 0 0\"}\r\n                            padding=\"10px\"\r\n                            fallbackSrc='https://via.placeholder.com/150'\r\n                          />\r\n                        ) : (\r\n                          <Image\r\n                            className=\"prd-image-main image-item-prds2\"\r\n                            src={require(`../../assets/images/no-image-available.png`)}\r\n                            alt={x.prdName}\r\n                            borderRadius={\"10px 10px 0 0\"}\r\n                            padding=\"10px\"\r\n                            fallbackSrc='https://via.placeholder.com/150'\r\n                          />\r\n                        )}\r\n                        {x.mockedImages && x.mockedImages.length > 0 ? (\r\n                          <Image\r\n                            className=\"prd-image-hover image-item-prds2\"\r\n                            src={x.mockedImages[0]}\r\n                            alt={x.prdName}\r\n                            borderRadius={\"10px 10px 0 0\"}\r\n                            padding=\"10px\"\r\n                            fallbackSrc='https://via.placeholder.com/150'\r\n                          />\r\n                        ) : null}\r\n                      </div>\r\n                    </CardBody>\r\n                    <CardFooter style={{ padding: \"10px\" }}>\r\n                      <Box className=\"product-card-footer\">\r\n                        <Text fontSize=\"md\">{x.prdName}</Text>\r\n                        <Text fontSize=\"sm\">{x.prdSize}</Text>\r\n                        <Text fontSize=\"sm\">{x.prdCode}</Text>\r\n                      </Box>\r\n                    </CardFooter>\r\n                  </Card>\r\n                );\r\n              })\r\n            ) : (\r\n              <div>No product yet.</div>\r\n            )}\r\n          </SimpleGrid>\r\n          <ResponsivePagination\r\n            total={totalPages}\r\n            current={currentPage}\r\n            onPageChange={(page) => handlePageChange(page)}\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport { ChevronRightIcon };\n","'use client';\nimport { createContext } from '@chakra-ui/utils';\n\nconst [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\nexport { BreadcrumbStylesProvider, useBreadcrumbStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbSeparator = forwardRef(\n  function BreadcrumbSeparator2(props, ref) {\n    const { spacing, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const separatorStyles = defineStyle({\n      mx: spacing,\n      ...styles.separator\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        role: \"presentation\",\n        ...rest,\n        __css: separatorStyles\n      }\n    );\n  }\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nexport { BreadcrumbSeparator };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbItem = forwardRef(\n  function BreadcrumbItem2(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage\n        });\n      }\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator\n        });\n      }\n      return child;\n    });\n    const styles = useBreadcrumbStyles();\n    const itemStyles = defineStyle({\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item\n    });\n    const _className = cx(\"chakra-breadcrumb__list-item\", className);\n    return /* @__PURE__ */ jsxs(chakra.li, { ref, className: _className, ...rest, __css: itemStyles, children: [\n      clones,\n      !isLastChild && /* @__PURE__ */ jsx(BreadcrumbSeparator, { spacing, children: separator })\n    ] });\n  }\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nexport { BreadcrumbItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbLink = forwardRef(\n  function BreadcrumbLink2(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest\n    };\n    if (isCurrentPage) {\n      return /* @__PURE__ */ jsx(chakra.span, { \"aria-current\": \"page\", __css: styles.link, ...sharedProps });\n    }\n    return /* @__PURE__ */ jsx(chakra.a, { __css: styles.link, href, ...sharedProps });\n  }\n);\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nexport { BreadcrumbLink };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { BreadcrumbStylesProvider } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Breadcrumb = forwardRef(\n  function Breadcrumb2(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps;\n    const validChildren = getValidChildren(children);\n    const count = validChildren.length;\n    const clones = validChildren.map(\n      (child, index) => cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1\n      })\n    );\n    const _className = cx(\"chakra-breadcrumb\", className);\n    return /* @__PURE__ */ jsx(\n      chakra.nav,\n      {\n        ref,\n        \"aria-label\": \"breadcrumb\",\n        className: _className,\n        __css: styles.container,\n        ...rest,\n        children: /* @__PURE__ */ jsx(BreadcrumbStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n          chakra.ol,\n          {\n            className: \"chakra-breadcrumb__list\",\n            ...listProps,\n            __css: {\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list\n            },\n            children: clones\n          }\n        ) })\n      }\n    );\n  }\n);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nexport { Breadcrumb };\n"],"names":["CategoryPage","category","subcategory","useParams","products","setProducts","useState","isPending","startTransition","useTransition","categories","setCategories","pageSize","window","innerWidth","currentPage","setCurrentPage","totalData","setTotalData","totalPages","useMemo","Math","ceil","length","navigate","useNavigate","capitalizeFirstLetters","string","split","map","word","charAt","toUpperCase","slice","join","useEffect","filterProducts","fetch","then","response","json","data","scrollTo","top","behavior","_jsxs","_Fragment","children","_jsx","Box","className","Breadcrumb","spacing","separator","ChevronRightIcon","color","BreadcrumbItem","BreadcrumbLink","href","formatUrl","sideNav","find","x","route","prds","isCurrentPage","SimpleGrid","Card","borderRadius","align","style","cursor","onClick","viewProductDetails","name","prdName","code","prdCode","prdColor","CardBody","images","Image","src","alt","padding","fallbackSrc","require","mockedImages","CardFooter","Text","fontSize","prdSize","ResponsivePagination","total","current","onPageChange","page","handlePageChange","createIcon","d","displayName","BreadcrumbStylesProvider","useBreadcrumbStyles","createContext","errorMessage","BreadcrumbSeparator","forwardRef","props","ref","rest","styles","separatorStyles","defineStyle","mx","jsx","chakra","span","role","__css","isLastChild","clones","getValidChildren","child","type","cloneElement","itemStyles","display","alignItems","item","_className","cx","jsxs","li","as","sharedProps","link","a","useMultiStyleConfig","ownProps","omitThemingProps","listProps","validChildren","count","index","nav","container","value","ol","list"],"sourceRoot":""}