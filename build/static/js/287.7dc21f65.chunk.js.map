{"version":3,"file":"static/js/287.7dc21f65.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs","../node_modules/@chakra-ui/react/dist/esm/card/card-context.mjs","../node_modules/@chakra-ui/react/dist/esm/card/card.mjs","../node_modules/@chakra-ui/react/dist/esm/card/card-body.mjs","../node_modules/@chakra-ui/react/dist/esm/card/card-footer.mjs","pages/products/ProductCategory.tsx","../node_modules/@chakra-ui/icons/dist/esm/ChevronRight.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-context.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-separator.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-item.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-link.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb.mjs","../node_modules/@chakra-ui/react/dist/esm/image/native-image.mjs","../node_modules/@chakra-ui/react/dist/esm/image/image.mjs","../node_modules/@chakra-ui/react/dist/esm/image/use-image.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mapResponsive } from '@chakra-ui/utils';\nimport { Grid } from './grid.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { getToken } from '../system/hooks.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n","'use client';\nimport { createStylesContext } from '../system/providers.mjs';\n\nconst [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport { CardStylesProvider, useCardStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { CardStylesProvider } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport { Card };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardBody = forwardRef(\n  function CardBody2(props, ref) {\n    const { className, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__body\", className),\n        __css: styles.body,\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardBody };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useCardStyles } from './card-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport { CardFooter };\n","import {\r\n    Box,\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    BreadcrumbLink,\r\n    Button,\r\n    ButtonGroup,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    Divider,\r\n    Heading,\r\n    Image,\r\n    SimpleGrid,\r\n    Stack,\r\n    Text\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport './Products.css';\r\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\r\nimport { dummyProducts } from \"../../helper/HeaderMenu\";\r\n\r\nconst CategoryPage = () => {\r\n    const { category, subcategory } = useParams();\r\n    const navigate = useNavigate();\r\n    const capitalizeFirstLetters = (string: any) => {\r\n        if (!!string) {\r\n            return string.split(' ').map((word: any) =>\r\n                word.charAt(0).toUpperCase() + word.slice(1)\r\n            ).join(' ');\r\n        } else {\r\n            return string\r\n        }\r\n    }\r\n\r\n    const viewProductDetails = (code: any) => {\r\n        navigate(`/products/${category}/${subcategory}/${code}`);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"category-title\">\r\n                <Breadcrumb spacing='8px' separator={<ChevronRightIcon color='gray.500' />}>\r\n                    <BreadcrumbItem>\r\n                        <BreadcrumbLink href='/products'>Products</BreadcrumbLink>\r\n                    </BreadcrumbItem>\r\n\r\n                    {\r\n                        !!category &&\r\n                        <BreadcrumbItem>\r\n                            <BreadcrumbLink>{capitalizeFirstLetters(category)}</BreadcrumbLink>\r\n                        </BreadcrumbItem>\r\n                    }\r\n\r\n                    {\r\n                        !!subcategory &&\r\n                        <BreadcrumbItem isCurrentPage>\r\n                            <BreadcrumbLink href={`/products/${category}/${subcategory}`}>{capitalizeFirstLetters(subcategory)}</BreadcrumbLink>\r\n                        </BreadcrumbItem>\r\n                    }\r\n\r\n                </Breadcrumb>\r\n            </Box>\r\n            <Box className=\"product-items-block\">\r\n                <SimpleGrid minChildWidth='300px' spacing='40px'>\r\n                    {\r\n                        dummyProducts && dummyProducts.length !== 0 ?\r\n                            dummyProducts.map((x: any) => {\r\n                                if (!!subcategory) {\r\n                                    if ((x.prdSubcategory).toLowerCase() === subcategory?.toLowerCase()) {\r\n                                        return <Card maxW='xs' borderRadius={'lg'} align='center' style={{ cursor: 'pointer' }} onClick={() => viewProductDetails(x.prdCode)}>\r\n                                            <CardBody className=\"product-card\">\r\n                                                <Image\r\n                                                    src={require(`../../assets/mock-media/dummy-products/${x.prdCode}.jpg`)}\r\n                                                    alt={x.prdName}\r\n                                                    borderRadius={'10px 10px 0 0'}\r\n                                                />\r\n                                            </CardBody>\r\n                                            <CardFooter style={{ padding: '10px' }}>\r\n                                                <Box className=\"product-card-footer\">\r\n                                                    <Text fontSize='xl'>{x.prdName}</Text>\r\n                                                    <Text fontSize='md'>{x.prdCode}</Text>\r\n                                                </Box>\r\n                                            </CardFooter>\r\n                                        </Card>\r\n                                    }\r\n                                }\r\n\r\n                            })\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                </SimpleGrid>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport { ChevronRightIcon };\n","'use client';\nimport { createContext } from '@chakra-ui/utils';\n\nconst [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\nexport { BreadcrumbStylesProvider, useBreadcrumbStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbSeparator = forwardRef(\n  function BreadcrumbSeparator2(props, ref) {\n    const { spacing, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const separatorStyles = defineStyle({\n      mx: spacing,\n      ...styles.separator\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        role: \"presentation\",\n        ...rest,\n        __css: separatorStyles\n      }\n    );\n  }\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nexport { BreadcrumbSeparator };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbItem = forwardRef(\n  function BreadcrumbItem2(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage\n        });\n      }\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator\n        });\n      }\n      return child;\n    });\n    const styles = useBreadcrumbStyles();\n    const itemStyles = defineStyle({\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item\n    });\n    const _className = cx(\"chakra-breadcrumb__list-item\", className);\n    return /* @__PURE__ */ jsxs(chakra.li, { ref, className: _className, ...rest, __css: itemStyles, children: [\n      clones,\n      !isLastChild && /* @__PURE__ */ jsx(BreadcrumbSeparator, { spacing, children: separator })\n    ] });\n  }\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nexport { BreadcrumbItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbLink = forwardRef(\n  function BreadcrumbLink2(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest\n    };\n    if (isCurrentPage) {\n      return /* @__PURE__ */ jsx(chakra.span, { \"aria-current\": \"page\", __css: styles.link, ...sharedProps });\n    }\n    return /* @__PURE__ */ jsx(chakra.a, { __css: styles.link, href, ...sharedProps });\n  }\n);\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nexport { BreadcrumbLink };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { BreadcrumbStylesProvider } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Breadcrumb = forwardRef(\n  function Breadcrumb2(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps;\n    const validChildren = getValidChildren(children);\n    const count = validChildren.length;\n    const clones = validChildren.map(\n      (child, index) => cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1\n      })\n    );\n    const _className = cx(\"chakra-breadcrumb\", className);\n    return /* @__PURE__ */ jsx(\n      chakra.nav,\n      {\n        ref,\n        \"aria-label\": \"breadcrumb\",\n        className: _className,\n        __css: styles.container,\n        ...rest,\n        children: /* @__PURE__ */ jsx(BreadcrumbStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n          chakra.ol,\n          {\n            className: \"chakra-breadcrumb__list\",\n            ...listProps,\n            __css: {\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list\n            },\n            children: clones\n          }\n        ) })\n      }\n    );\n  }\n);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nexport { Breadcrumb };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport { NativeImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport { Image };\n","'use client';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad?.(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError?.(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nconst shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport { shouldShowFallbackImage, useImage };\n"],"names":["Grid","forwardRef","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","div","__css","displayName","SimpleGrid","columns","spacingX","spacingY","spacing","minChildWidth","theme","useTheme","width","mapResponsive","value","_value","getToken","n","widthToColumns","count","CardStylesProvider","useCardStyles","createStylesContext","Card","className","children","direction","justify","align","omitThemingProps","useMultiStyleConfig","cx","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","CardBody","body","CardFooter","footer","CategoryPage","category","subcategory","useParams","navigate","useNavigate","capitalizeFirstLetters","string","split","map","word","charAt","toUpperCase","slice","join","_jsxs","_Fragment","_jsx","Box","Breadcrumb","separator","ChevronRightIcon","color","BreadcrumbItem","BreadcrumbLink","href","isCurrentPage","dummyProducts","length","x","prdSubcategory","toLowerCase","maxW","borderRadius","style","cursor","onClick","viewProductDetails","code","prdCode","Image","src","require","alt","prdName","padding","Text","fontSize","createIcon","d","BreadcrumbStylesProvider","useBreadcrumbStyles","createContext","name","errorMessage","BreadcrumbSeparator","separatorStyles","defineStyle","mx","span","role","isLastChild","clones","getValidChildren","child","type","cloneElement","itemStyles","item","_className","jsxs","li","as","sharedProps","link","a","ownProps","listProps","validChildren","index","nav","ol","list","NativeImage","htmlWidth","htmlHeight","height","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","omit"],"sourceRoot":""}