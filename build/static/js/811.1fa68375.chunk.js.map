{"version":3,"file":"static/js/811.1fa68375.chunk.js","mappings":"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","sources":["pages/products/ProductCategory.tsx","../node_modules/@chakra-ui/icons/dist/esm/ChevronRight.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-context.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-separator.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-item.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-link.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/simple-grid.mjs"],"sourcesContent":["import {\r\n  Box,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Image,\r\n  SimpleGrid,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"./Products.css\";\r\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\r\nimport { useEffect, useState, useTransition } from \"react\";\r\n\r\nconst CategoryPage = () => {\r\n  const { category, subcategory } = useParams();\r\n  const [products, setProducts] = useState<any>([]);\r\n  const [isPending, startTransition] = useTransition();\r\n  const navigate = use);\r\n\r\n  const capitalizeFirstLetters = (string: any) => {\r\n    if (!!string) {\r\n      return string\r\n        .split(\" \")\r\n        .map((word: any) => word.charAt(0).toUpperCase() + word.slice(1))\r\n        .join(\" \");\r\n    } else {\r\n      return string;\r\n    }\r\n  };\r\n\r\n  const viewProductDetails = (name: any, code: any) => {\r\n    if (subcategory)\r\n      navigate(`/products/${category}/${subcategory}/${name}/${code}`);\r\n    else navigate(`/products/${category}/${name}/${code}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startTransition(() => {\r\n      setProducts(null);\r\n    });\r\n\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    fetch(\r\n      `${process.env.REACT_APP_API_URL}/products/${subcategory ?? category}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        startTransition(() => {\r\n          setProducts(data);\r\n        });\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [startTransition, category, subcategory]);\r\n\r\n  return (\r\n    <>\r\n      <Box className=\"category-title\">\r\n        <Breadcrumb\r\n          spacing=\"8px\"\r\n          separator={<ChevronRightIcon color=\"gray.500\" />}\r\n        >\r\n          <BreadcrumbItem>\r\n            <BreadcrumbLink href=\"/products/tiles/all-products\">Products</BreadcrumbLink>\r\n          </BreadcrumbItem>\r\n\r\n          {!!category && (\r\n            <BreadcrumbItem>\r\n              <BreadcrumbLink>\r\n                {capitalizeFirstLetters(category)}\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          )}\r\n\r\n          {!!subcategory && (\r\n            <BreadcrumbItem isCurrentPage>\r\n              <BreadcrumbLink href={`/products/${category}/${subcategory}`}>\r\n                {capitalizeFirstLetters(subcategory)}\r\n              </BreadcrumbLink>\r\n            </BreadcrumbItem>\r\n          )}\r\n        </Breadcrumb>\r\n      </Box>\r\n      {!isPending && <Box className=\"product-items-block\">\r\n        <SimpleGrid className=\"products-grid\" spacing=\"40px\">\r\n          {products && products.length !== 0\r\n            ? products.map((x: any) => {\r\n                return (\r\n                  <Card\r\n                    className=\"product-card-body \"\r\n                    borderRadius={\"lg\"}\r\n                    align=\"center\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() =>\r\n                      viewProductDetails(\r\n                        x.prdName,\r\n                        x.prdCode !== \"-\" ? x.prdCode : x.prdColor\r\n                      )\r\n                    }\r\n                  >\r\n                    <CardBody className=\"product-card\">\r\n                      {x.images && x.images.length > 0 ? (\r\n                        <Image\r\n                          className=\"image-item-prds\"\r\n                          src={x.images[0]}\r\n                          alt={x.prdName}\r\n                          borderRadius={\"10px 10px 0 0\"}\r\n                          padding=\"10px\"\r\n                        />\r\n                      ) : (\r\n                        <Image\r\n                          className=\"image-item-prds\"\r\n                          src={require(`../../assets/images/no-image-available.png`)}\r\n                          alt={x.prdName}\r\n                          borderRadius={\"10px 10px 0 0\"}\r\n                          padding=\"10px\"\r\n                        />\r\n                      )}\r\n                    </CardBody>\r\n                    <CardFooter style={{ padding: \"10px\" }}>\r\n                      <Box className=\"product-card-footer\">\r\n                        <Text fontSize=\"md\">{x.prdName}</Text>\r\n                        <Text fontSize=\"sm\">{x.prdSize}</Text>\r\n                        <Text fontSize=\"sm\">{x.prdCode}</Text>\r\n                      </Box>\r\n                    </CardFooter>\r\n                  </Card>\r\n                );\r\n              })\r\n            : <div>No product yet.</div>}\r\n        </SimpleGrid>\r\n      </Box>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport { ChevronRightIcon };\n","'use client';\nimport { createContext } from '@chakra-ui/utils';\n\nconst [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\nexport { BreadcrumbStylesProvider, useBreadcrumbStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbSeparator = forwardRef(\n  function BreadcrumbSeparator2(props, ref) {\n    const { spacing, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const separatorStyles = defineStyle({\n      mx: spacing,\n      ...styles.separator\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        role: \"presentation\",\n        ...rest,\n        __css: separatorStyles\n      }\n    );\n  }\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nexport { BreadcrumbSeparator };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbItem = forwardRef(\n  function BreadcrumbItem2(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage\n        });\n      }\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator\n        });\n      }\n      return child;\n    });\n    const styles = useBreadcrumbStyles();\n    const itemStyles = defineStyle({\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item\n    });\n    const _className = cx(\"chakra-breadcrumb__list-item\", className);\n    return /* @__PURE__ */ jsxs(chakra.li, { ref, className: _className, ...rest, __css: itemStyles, children: [\n      clones,\n      !isLastChild && /* @__PURE__ */ jsx(BreadcrumbSeparator, { spacing, children: separator })\n    ] });\n  }\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nexport { BreadcrumbItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbLink = forwardRef(\n  function BreadcrumbLink2(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest\n    };\n    if (isCurrentPage) {\n      return /* @__PURE__ */ jsx(chakra.span, { \"aria-current\": \"page\", __css: styles.link, ...sharedProps });\n    }\n    return /* @__PURE__ */ jsx(chakra.a, { __css: styles.link, href, ...sharedProps });\n  }\n);\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nexport { BreadcrumbLink };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { BreadcrumbStylesProvider } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Breadcrumb = forwardRef(\n  function Breadcrumb2(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps;\n    const validChildren = getValidChildren(children);\n    const count = validChildren.length;\n    const clones = validChildren.map(\n      (child, index) => cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1\n      })\n    );\n    const _className = cx(\"chakra-breadcrumb\", className);\n    return /* @__PURE__ */ jsx(\n      chakra.nav,\n      {\n        ref,\n        \"aria-label\": \"breadcrumb\",\n        className: _className,\n        __css: styles.container,\n        ...rest,\n        children: /* @__PURE__ */ jsx(BreadcrumbStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n          chakra.ol,\n          {\n            className: \"chakra-breadcrumb__list\",\n            ...listProps,\n            __css: {\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list\n            },\n            children: clones\n          }\n        ) })\n      }\n    );\n  }\n);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nexport { Breadcrumb };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mapResponsive } from '@chakra-ui/utils';\nimport { Grid } from './grid.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { getToken } from '../system/hooks.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport { SimpleGrid };\n"],"names":["CategoryPage","category","subcategory","useParams","products","setProducts","useState","isPending","startTransition","useTransition","navigate","useNavigate","capitalizeFirstLetters","string","split","map","word","charAt","toUpperCase","slice","join","useEffect","window","scrollTo","top","behavior","fetch","then","response","json","data","_jsxs","_Fragment","children","_jsx","Box","className","Breadcrumb","spacing","separator","ChevronRightIcon","color","BreadcrumbItem","BreadcrumbLink","href","isCurrentPage","SimpleGrid","length","x","Card","borderRadius","align","style","cursor","onClick","viewProductDetails","name","prdName","code","prdCode","prdColor","CardBody","images","Image","src","alt","padding","require","CardFooter","Text","fontSize","prdSize","createIcon","d","displayName","BreadcrumbStylesProvider","useBreadcrumbStyles","createContext","errorMessage","BreadcrumbSeparator","forwardRef","props","ref","rest","styles","separatorStyles","defineStyle","mx","jsx","chakra","span","role","__css","isLastChild","clones","getValidChildren","child","type","cloneElement","itemStyles","display","alignItems","item","_className","cx","jsxs","li","as","sharedProps","link","a","useMultiStyleConfig","ownProps","omitThemingProps","listProps","validChildren","count","index","nav","container","value","ol","list","columns","spacingX","spacingY","minChildWidth","theme","useTheme","templateColumns","width","mapResponsive","_value","getToken","n","widthToColumns","Grid","gap","columnGap","rowGap"],"sourceRoot":""}