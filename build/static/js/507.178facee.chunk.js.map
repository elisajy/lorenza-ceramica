{"version":3,"file":"static/js/507.178facee.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/react/dist/esm/toast/toast.placement.mjs","../node_modules/@chakra-ui/react/dist/esm/toast/use-toast.mjs","../node_modules/@chakra-ui/react/dist/esm/toast/create-toast-fn.mjs","pages/products/ProductImagesThumb.tsx","pages/products/ProductImages.tsx","pages/products/ProductDetails.tsx","../node_modules/@chakra-ui/icons/dist/esm/ChevronRight.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-context.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-separator.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-item.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-link.mjs","../node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb.mjs","../node_modules/@chakra-ui/react/dist/esm/stack/stack-divider.mjs"],"sourcesContent":["'use client';\nfunction getToastPlacement(position, dir) {\n  const computedPosition = position ?? \"bottom\";\n  const logicals = {\n    \"top-start\": { ltr: \"top-left\", rtl: \"top-right\" },\n    \"top-end\": { ltr: \"top-right\", rtl: \"top-left\" },\n    \"bottom-start\": { ltr: \"bottom-left\", rtl: \"bottom-right\" },\n    \"bottom-end\": { ltr: \"bottom-right\", rtl: \"bottom-left\" }\n  };\n  const logical = logicals[computedPosition];\n  return logical?.[dir] ?? computedPosition;\n}\n\nexport { getToastPlacement };\n","'use client';\nimport { useMemo } from 'react';\nimport { createToastFn } from './create-toast-fn.mjs';\nimport { useToastOptionContext } from './toast.provider.mjs';\nimport { useChakra } from '../system/hooks.mjs';\n\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\n\nexport { useToast };\n","'use client';\nimport { runIfFn } from '@chakra-ui/utils';\nimport { createRenderToast } from './toast.mjs';\nimport { getToastPlacement } from './toast.placement.mjs';\nimport { toastStore } from './toast.store.mjs';\n\nfunction createToastFn(dir, defaultOptions) {\n  const normalizeToastOptions = (options) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir\n    )\n  });\n  const toast = (options) => {\n    const normalizedToastOptions = normalizeToastOptions(options);\n    const Message = createRenderToast(normalizedToastOptions);\n    return toastStore.notify(Message, normalizedToastOptions);\n  };\n  toast.update = (id, options) => {\n    toastStore.update(id, normalizeToastOptions(options));\n  };\n  toast.promise = (promise, options) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null\n    });\n    promise.then(\n      (data) => toast.update(id, {\n        status: \"success\",\n        duration: 5e3,\n        ...runIfFn(options.success, data)\n      })\n    ).catch(\n      (error) => toast.update(id, {\n        status: \"error\",\n        duration: 5e3,\n        ...runIfFn(options.error, error)\n      })\n    );\n  };\n  toast.closeAll = toastStore.closeAll;\n  toast.close = toastStore.close;\n  toast.isActive = toastStore.isActive;\n  return toast;\n}\n\nexport { createToastFn };\n","import {\r\n    Image\r\n} from \"@chakra-ui/react\";\r\nimport React from 'react';\r\ntype PropType = {\r\n    selected: boolean\r\n    index: any\r\n    onClick: () => void\r\n}\r\n\r\nexport const Thumb: React.FC<PropType> = (props) => {\r\n    const { selected, index, onClick } = props\r\n\r\n    return (\r\n        <div\r\n            className={'pi-thumbs-slide'.concat(\r\n                selected ? ' pi-thumbs-slide--selected' : ''\r\n            )}\r\n        >\r\n            <button\r\n                onClick={onClick}\r\n                type=\"button\"\r\n                className=\"pi-thumbs-slide-number\"\r\n            >\r\n                <Image\r\n                    src={index}\r\n                    alt='product-image'\r\n                    borderRadius='none'\r\n                />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { EmblaOptionsType } from \"embla-carousel\";\r\nimport useEmblaCarousel from \"embla-carousel-react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Thumb } from \"./ProductImagesThumb\";\r\ntype PropType = {\r\n  slides: number[];\r\n  options?: EmblaOptionsType;\r\n};\r\n\r\nconst ProductImages: React.FC<PropType> = (props) => {\r\n  const { slides, options } = props;\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [emblaMainRef, emblaMainApi] = useEmblaCarousel(options);\r\n  const [emblaThumbsRef, emblaThumbsApi] = useEmblaCarousel({\r\n    containScroll: \"keepSnaps\",\r\n    dragFree: true,\r\n  });\r\n\r\n  const onThumbClick = useCallback(\r\n    (index: number) => {\r\n      if (!emblaMainApi || !emblaThumbsApi) return;\r\n      emblaMainApi.scrollTo(index);\r\n    },\r\n    [emblaMainApi, emblaThumbsApi]\r\n  );\r\n\r\n  const onSelect = useCallback(() => {\r\n    if (!emblaMainApi || !emblaThumbsApi) return;\r\n    setSelectedIndex(emblaMainApi.selectedScrollSnap());\r\n    emblaThumbsApi.scrollTo(emblaMainApi.selectedScrollSnap());\r\n  }, [emblaMainApi, emblaThumbsApi, setSelectedIndex]);\r\n\r\n  useEffect(() => {\r\n    if (!emblaMainApi) return;\r\n    onSelect();\r\n\r\n    emblaMainApi.on(\"select\", onSelect).on(\"reInit\", onSelect);\r\n  }, [emblaMainApi, onSelect]);\r\n\r\n  return (\r\n    <div className=\"product-images\">\r\n      <div className=\"pi-viewport\" ref={emblaMainRef}>\r\n        <div className=\"pi-container\">\r\n          {slides && slides.length > 0 ? (\r\n            slides.map((x: any, i: number) => (\r\n              <div className=\"pi-slide\" key={i}>\r\n                <img src={x} className=\"image-item\" />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"pi-slide\">\r\n              {/* <div className=\"pi-slidenum\">{index + 1}</div> */}\r\n              <img\r\n                src={require(`../../assets/images/no-image-available.png`)}\r\n                className=\"image-item\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pi-thumbs\">\r\n        <div className=\"pi-thumbs-viewport\" ref={emblaThumbsRef}>\r\n          <div className=\"pi-thumbs-container\">\r\n            {slides && slides.length > 0 ? (\r\n              slides.map((x: any, i: number) => (\r\n                <Thumb\r\n                  key={i}\r\n                  onClick={() => onThumbClick(i)}\r\n                  selected={x === selectedIndex}\r\n                  index={x}\r\n                />\r\n              ))\r\n            ) : (\r\n              <Thumb\r\n                key={0}\r\n                onClick={() => onThumbClick(0)}\r\n                selected={0 === selectedIndex}\r\n                index={require(`../../assets/images/no-image-available.png`)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductImages;\r\n","import { ChevronRightIcon } from '@chakra-ui/icons';\r\nimport { Box, Breadcrumb, BreadcrumbItem, BreadcrumbLink, Button, StackDivider, Text, useToast, VStack } from '@chakra-ui/react';\r\nimport { EmblaOptionsType } from 'embla-carousel';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ProductImages from './ProductImages';\r\nimport './Products.css';\r\nimport { ADD_ITEM, useCartContext } from '../../hooks/cart-context/CartContext';\r\n\r\nconst ItemDetail = () => {\r\n    const toast = useToast();\r\n    const { category, subcategory, name, code } = useParams();\r\n    const [selectedProduct, setSelectedProduct] = useState<any>();\r\n    const [prdImages, setPrdImages] = useState<any>([]);\r\n    const { cartDispatch } = useCartContext();\r\n    const capitalizeFirstLetters = (string: any) => {\r\n        if (!!string) {\r\n            return string.split(' ').map((word: any) =>\r\n                word.charAt(0).toUpperCase() + word.slice(1)\r\n            ).join(' ');\r\n        } else {\r\n            return string\r\n        }\r\n    }\r\n\r\n    const OPTIONS: EmblaOptionsType = {}\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        fetch(`${process.env.REACT_APP_API_URL}/product-details/${name}/${code}`)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                setSelectedProduct(data);\r\n                setPrdImages(data.images ?? []);\r\n            });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const addToCart = () => {\r\n        cartDispatch({\r\n            type: ADD_ITEM,\r\n            payload: selectedProduct,\r\n        });\r\n        toast({\r\n            title: 'Successful!',\r\n            description: 'Item added to cart.',\r\n            status: 'success',\r\n            position: 'top',\r\n            duration: 900,\r\n            isClosable: true,\r\n        });\r\n    };\r\n\r\n    const onClickInquiry = () => {\r\n        const phoneNumber = process.env.REACT_APP_BUSINESS_CONTACT;\r\n        let message = \"Hi, I would like to inquire about this product: \";\r\n        message.concat(\r\n            `${selectedProduct.prdName} (*${selectedProduct.prdCode}*)`\r\n        )\r\n        const url = `https://web.whatsapp.com/send?phone=${phoneNumber}&text=${encodeURIComponent(\r\n            message\r\n        )}&app_absent=0`;\r\n        window.open(url, \"_blank\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box className=\"category-title\">\r\n                <Breadcrumb spacing='8px' separator={<ChevronRightIcon color='gray.500' />}>\r\n                    <BreadcrumbItem>\r\n                        <BreadcrumbLink href='/products'>Products</BreadcrumbLink>\r\n                    </BreadcrumbItem>\r\n\r\n                    {\r\n                        !!category &&\r\n                        <BreadcrumbItem>\r\n                            <BreadcrumbLink>{capitalizeFirstLetters(category)}</BreadcrumbLink>\r\n                        </BreadcrumbItem>\r\n                    }\r\n\r\n                    {\r\n                        !!subcategory &&\r\n                        <BreadcrumbItem>\r\n                            <BreadcrumbLink href={`/products/${category}/${subcategory}`}>{capitalizeFirstLetters(subcategory)}</BreadcrumbLink>\r\n                        </BreadcrumbItem>\r\n                    }\r\n\r\n                    {\r\n                        !!code &&\r\n                        <BreadcrumbItem isCurrentPage>\r\n                            <BreadcrumbLink href={`/products/${category}/${subcategory}/${code}`}>{capitalizeFirstLetters(code)}</BreadcrumbLink>\r\n                        </BreadcrumbItem>\r\n                    }\r\n\r\n                </Breadcrumb>\r\n            </Box>\r\n            {\r\n                selectedProduct &&\r\n                <Box className='product-details-block'>\r\n                    <Box className='product-image-block'>\r\n                        <ProductImages slides={prdImages} options={OPTIONS}></ProductImages>\r\n                    </Box>\r\n                    <Box className='product-info-block'>\r\n                        <VStack divider={<StackDivider borderColor='gray.200' />}\r\n                            spacing={4}\r\n                            align='stretch'>\r\n                            <Box>\r\n                                <Text color={'#0c478a'} fontWeight={700} fontSize='3xl'>{selectedProduct.prdName}</Text>\r\n                                <br />\r\n                                {\r\n                                    category && subcategory &&\r\n                                    <Text fontSize='lg'>Product Category: {category} / {subcategory}</Text>\r\n                                }\r\n                                {\r\n                                    selectedProduct.prdCode &&\r\n                                    <Text fontSize='lg'>Code: {selectedProduct.prdCode}</Text>\r\n                                }\r\n                                {\r\n                                    selectedProduct.prdVariation &&\r\n                                    <Text fontSize='lg'>Variation: {selectedProduct.prdVariation}</Text>\r\n                                }\r\n                                {\r\n                                    selectedProduct.prdSize &&\r\n                                    <Text fontSize='lg'>Size: {selectedProduct.prdSize}</Text>\r\n                                }\r\n                                {\r\n                                    selectedProduct.prdColor &&\r\n                                    <Text fontSize='lg'>Color: {selectedProduct.prdColor}</Text>\r\n                                }\r\n                                {\r\n                                    selectedProduct.prdFinish &&\r\n                                    <Text fontSize='lg'>Finish: {selectedProduct.prdFinish}</Text>\r\n                                }\r\n                                {\r\n                                    selectedProduct.thickness &&\r\n                                    <Text fontSize='lg'>Thickness: {selectedProduct.thickness}</Text>\r\n                                }\r\n                                <br />\r\n                                <Text fontSize='xl' color={'#0c478a'} fontWeight={600}>Product Description</Text>\r\n                                {\r\n                                    selectedProduct.prdDesc &&\r\n                                    <Text style={{ textAlign: 'justify' }} fontSize='lg'>{selectedProduct.prdDesc}</Text>\r\n                                }\r\n                                <br />\r\n                            </Box>\r\n                            <Box>\r\n                                <VStack>\r\n                                    <Button onClick={addToCart} className=\"button-size\" style={{ backgroundColor: '#ff6e04', color: 'white', width: '150px' }} variant='solid'>\r\n                                        Add To Cart\r\n                                    </Button>\r\n                                    <Button onClick={onClickInquiry} className=\"button-size\" style={{ backgroundColor: '#ff6e04', color: 'white', width: '150px' }} variant='solid'>\r\n                                        Product Enquiry\r\n                                    </Button>\r\n                                </VStack>\r\n                            </Box>\r\n                        </VStack>\r\n                    </Box>\r\n                </Box>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ItemDetail;\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport { ChevronRightIcon };\n","'use client';\nimport { createContext } from '@chakra-ui/utils';\n\nconst [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `\n});\n\nexport { BreadcrumbStylesProvider, useBreadcrumbStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbSeparator = forwardRef(\n  function BreadcrumbSeparator2(props, ref) {\n    const { spacing, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const separatorStyles = defineStyle({\n      mx: spacing,\n      ...styles.separator\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ref,\n        role: \"presentation\",\n        ...rest,\n        __css: separatorStyles\n      }\n    );\n  }\n);\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\";\n\nexport { BreadcrumbSeparator };\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbItem = forwardRef(\n  function BreadcrumbItem2(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage\n        });\n      }\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator\n        });\n      }\n      return child;\n    });\n    const styles = useBreadcrumbStyles();\n    const itemStyles = defineStyle({\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item\n    });\n    const _className = cx(\"chakra-breadcrumb__list-item\", className);\n    return /* @__PURE__ */ jsxs(chakra.li, { ref, className: _className, ...rest, __css: itemStyles, children: [\n      clones,\n      !isLastChild && /* @__PURE__ */ jsx(BreadcrumbSeparator, { spacing, children: separator })\n    ] });\n  }\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nexport { BreadcrumbItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbLink = forwardRef(\n  function BreadcrumbLink2(props, ref) {\n    const { isCurrentPage, as, className, href, ...rest } = props;\n    const styles = useBreadcrumbStyles();\n    const sharedProps = {\n      ref,\n      as,\n      className: cx(\"chakra-breadcrumb__link\", className),\n      ...rest\n    };\n    if (isCurrentPage) {\n      return /* @__PURE__ */ jsx(chakra.span, { \"aria-current\": \"page\", __css: styles.link, ...sharedProps });\n    }\n    return /* @__PURE__ */ jsx(chakra.a, { __css: styles.link, href, ...sharedProps });\n  }\n);\nBreadcrumbLink.displayName = \"BreadcrumbLink\";\n\nexport { BreadcrumbLink };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { BreadcrumbStylesProvider } from './breadcrumb-context.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Breadcrumb = forwardRef(\n  function Breadcrumb2(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps;\n    const validChildren = getValidChildren(children);\n    const count = validChildren.length;\n    const clones = validChildren.map(\n      (child, index) => cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1\n      })\n    );\n    const _className = cx(\"chakra-breadcrumb\", className);\n    return /* @__PURE__ */ jsx(\n      chakra.nav,\n      {\n        ref,\n        \"aria-label\": \"breadcrumb\",\n        className: _className,\n        __css: styles.container,\n        ...rest,\n        children: /* @__PURE__ */ jsx(BreadcrumbStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n          chakra.ol,\n          {\n            className: \"chakra-breadcrumb__list\",\n            ...listProps,\n            __css: {\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list\n            },\n            children: clones\n          }\n        ) })\n      }\n    );\n  }\n);\nBreadcrumb.displayName = \"Breadcrumb\";\n\nexport { Breadcrumb };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nconst StackDivider = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__divider\",\n    ...props,\n    __css: {\n      ...props[\"__css\"],\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\"\n    }\n  }\n);\nStackDivider.displayName = \"StackDivider\";\n\nexport { StackDivider };\n"],"names":["getToastPlacement","position","dir","computedPosition","logical","ltr","rtl","useToast","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","normalizeToastOptions","toast","normalizedToastOptions","Message","createRenderToast","toastStore","notify","update","id","promise","loading","status","duration","then","data","runIfFn","success","catch","error","closeAll","close","isActive","createToastFn","direction","Thumb","props","selected","index","onClick","_jsx","className","concat","children","type","Image","src","alt","borderRadius","slides","selectedIndex","setSelectedIndex","useState","emblaMainRef","emblaMainApi","useEmblaCarousel","emblaThumbsRef","emblaThumbsApi","containScroll","dragFree","onThumbClick","useCallback","scrollTo","onSelect","selectedScrollSnap","useEffect","on","_jsxs","ref","length","map","x","i","require","ItemDetail","category","subcategory","name","code","useParams","selectedProduct","setSelectedProduct","prdImages","setPrdImages","cartDispatch","useCartContext","capitalizeFirstLetters","string","split","word","charAt","toUpperCase","slice","join","window","top","behavior","fetch","response","json","_data$images","images","_Fragment","Box","Breadcrumb","spacing","separator","ChevronRightIcon","color","BreadcrumbItem","BreadcrumbLink","href","isCurrentPage","ProductImages","VStack","divider","StackDivider","borderColor","align","Text","fontWeight","fontSize","prdName","prdCode","prdVariation","prdSize","prdColor","prdFinish","thickness","prdDesc","style","textAlign","Button","addToCart","ADD_ITEM","payload","title","description","isClosable","backgroundColor","width","variant","onClickInquiry","message","url","encodeURIComponent","open","createIcon","d","displayName","BreadcrumbStylesProvider","useBreadcrumbStyles","createContext","errorMessage","BreadcrumbSeparator","forwardRef","rest","styles","separatorStyles","defineStyle","mx","jsx","chakra","span","role","__css","isLastChild","clones","getValidChildren","child","cloneElement","itemStyles","display","alignItems","item","_className","cx","jsxs","li","as","sharedProps","link","a","useMultiStyleConfig","ownProps","omitThemingProps","listProps","validChildren","count","nav","container","value","ol","list","div","borderWidth","alignSelf","height"],"sourceRoot":""}