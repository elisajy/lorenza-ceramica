{"version":3,"file":"static/js/582.e8329703.chunk.js","mappings":"6TAoBA,MA+FA,EA/FqBA,KACnB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,KAE1BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAiB,IAChDG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,IACrCK,GAAaC,EAAAA,EAAAA,UAAQ,IAAMC,KAAKC,KAAKL,EAAUM,OAHpC,IAGwD,CAACN,IACpEO,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACRC,MAAM,gDACHC,MAAMC,GAAaA,EAASC,SAC5BF,MAAMhB,IACLC,EACED,EAAKmB,MAXI,GAYNhB,EAAc,GAZR,EAaPA,IAGJG,EAAaN,EAAK,GAClB,GAEH,KAEHc,EAAAA,EAAAA,YAAU,KACRb,EACEI,EAAUc,MAvBG,GAwBVhB,EAAc,GAxBJ,EAyBXA,GAEH,GAEA,CAACA,IA8CJ,OACEiB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,QAAQ,OAAOC,cAAc,SAAQC,SAAA,EACxCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAeC,IAAI,qBAC7BH,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,UAAU,QAAQC,KAAK,KAAKC,UAAU,SAASC,UAAU,OAAMT,SAAC,iBACzEJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACa,SAAS,MAAMC,OAAO,YAAWX,SAAA,EACpCC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAACN,UAAU,YAAYO,QAAQ,OAAOC,QAAS,EAAEd,SA5CzDxB,EAAKuC,KAAKC,IAEbpB,EAAAA,EAAAA,MAACqB,EAAAA,EAAI,CAEHC,QAAQ,WACRC,IAAI,OAAMnB,SAAA,EAEVC,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAAApB,UACTC,EAAAA,EAAAA,KAACI,EAAAA,EAAO,CAACC,UAAU,QAAQC,KAAK,KAAIP,SACjCgB,EAAEK,WAGPzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACS,UAAU,iBAAgBN,SAAA,EAC7BC,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACJhB,UAAU,iBACViB,UAAU,QACVrB,IAAKc,EAAEQ,UACPpB,IAAI,UAENR,EAAAA,EAAAA,MAAC6B,EAAAA,EAAK,CAACnB,UAAU,eAAeoB,QAAQ,OAAM1B,SAAA,EAC5CC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAQ,CAAA3B,UACPC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CAACtB,UAAU,YAAYuB,SAAU,CAAEC,GAAG,OAAQC,GAAI,OAAQC,GAAI,QAAUC,GAAG,IAAIC,MAAM,QAAOlC,SAAEgB,EAAEmB,iBAEvGlC,EAAAA,EAAAA,KAACmC,EAAAA,EAAU,CAAC5B,UAAU,WAAUR,UAC9BC,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CACLnB,QAAQ,OACRgB,MAAM,QACNI,QAASA,IAAMlD,EAAS,yBAAyB4B,EAAEuB,QAAQvC,SAC5D,wBAzBFgB,EAAEwB,SA4CTvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAoB,CACnBC,MAAO3D,EACP4D,QAAShE,EACTiE,aAAeC,GAvDGA,KACxBjE,EAAeiE,EAAK,EAsDUC,CAAiBD,UAGzC,C","sources":["pages/inspirations/Inspirations.tsx"],"sourcesContent":["import {\r\n  Box,\r\n  Card,\r\n  Image,\r\n  Stack,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  SimpleGrid,\r\n  CardHeader,\r\n} from \"@chakra-ui/react\";\r\nimport pageBgDivider from \"../../assets/images/page-bg-divider.png\";\r\nimport \"./Inspirations.css\";\r\nimport ResponsivePagination from \"react-responsive-pagination\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { inspirationData } from \"./Inspiration.data\";\r\n\r\nconst Inspirations = () => {\r\n  const [data, setData] = useState([]);\r\n  const pageSize = 6;\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const totalPages = useMemo(() => Math.ceil(totalData.length / pageSize), [totalData]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/inspirations`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(\r\n          data.slice(\r\n            (currentPage - 1) * pageSize,\r\n            currentPage * pageSize\r\n          )\r\n        );\r\n        setTotalData(data);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(\r\n      totalData.slice(\r\n        (currentPage - 1) * pageSize,\r\n        currentPage * pageSize\r\n      )\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const inspirationList = () => {\r\n    return data.map((x: any) => {\r\n      return (\r\n        <Card\r\n          key={x.id}\r\n          variant=\"unstyled\"\r\n          gap=\"10px\"\r\n        >\r\n          <CardHeader>\r\n            <Heading className=\"title\" size=\"md\">\r\n              {x.title}\r\n            </Heading>\r\n          </CardHeader>\r\n          <Box className=\"card-container\">\r\n            <Image\r\n              className=\"card-thumbnail\"\r\n              objectFit=\"cover\"\r\n              src={x.thumbnail}\r\n              alt=\"post\"\r\n            />\r\n            <Stack className=\"card-content\" padding=\"10px\">\r\n              <CardBody>\r\n                <Text className=\"card-desc\" fontSize={{ sm:\"12px\", md: \"14px\", lg: \"16px\" }} py=\"2\" color=\"white\">{x.description}</Text>\r\n              </CardBody>\r\n              <CardFooter alignSelf=\"flex-end\">\r\n                <Button\r\n                  variant=\"link\"\r\n                  color=\"white\"\r\n                  onClick={() => navigate(`/inspirations/article/${x.path}`)}\r\n                >\r\n                  READ MORE\r\n                </Button>\r\n              </CardFooter>\r\n            </Stack>\r\n          </Box>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <img src={pageBgDivider} alt=\"page-bg-divider\" />\r\n      <Heading className=\"title\" size=\"lg\" alignSelf=\"center\" marginTop=\"30px\">INSPIRATION</Heading>\r\n      <Box maxWidth=\"8xl\" margin=\"40px 80px\">\r\n        <SimpleGrid className=\"card-grid\" spacing=\"50px\" columns={2}>\r\n          {inspirationList()}\r\n        </SimpleGrid>\r\n        <ResponsivePagination\r\n          total={totalPages}\r\n          current={currentPage}\r\n          onPageChange={(page) => handlePageChange(page)}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Inspirations;\r\n"],"names":["Inspirations","data","setData","useState","currentPage","setCurrentPage","totalData","setTotalData","totalPages","useMemo","Math","ceil","length","navigate","useNavigate","useEffect","fetch","then","response","json","slice","_jsxs","Box","display","flexDirection","children","_jsx","src","pageBgDivider","alt","Heading","className","size","alignSelf","marginTop","maxWidth","margin","SimpleGrid","spacing","columns","map","x","Card","variant","gap","CardHeader","title","Image","objectFit","thumbnail","Stack","padding","CardBody","Text","fontSize","sm","md","lg","py","color","description","CardFooter","Button","onClick","path","id","ResponsivePagination","total","current","onPageChange","page","handlePageChange"],"sourceRoot":""}