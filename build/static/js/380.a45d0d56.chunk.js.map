{"version":3,"file":"static/js/380.a45d0d56.chunk.js","mappings":"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","sources":["pages/projects/Projects.tsx"],"sourcesContent":["import { Box, Button, Card, CardBody, CardFooter, CardHeader, Heading, Image, SimpleGrid, Stack, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Projects.css\";\r\nimport ResponsivePagination from \"react-responsive-pagination\";\r\n\r\nconst Projects = () => {\r\n  const [data, setData] = useState([]);\r\n  const pageSize = 6;\r\n  const [selectedTab, setSelectedTab] = useState<string>(\"commercial\");\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [totalData, setTotalData] = useState([]);\r\n  const totalPages = useMemo(() => Math.ceil(totalData.length / pageSize), [totalData]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchData(\"projects-commercial\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(totalData.slice((currentPage - 1) * pageSize, currentPage * pageSize));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const fetchData = (path: string) => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/${path}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(\r\n          data.slice(\r\n            (currentPage - 1) * pageSize,\r\n            currentPage * pageSize\r\n          )\r\n        );\r\n        setTotalData(data);\r\n      });\r\n  };\r\n\r\n  const projectList = () => {\r\n    return data.map((x: any) => {\r\n      return (\r\n        <Card\r\n          key={x.id}\r\n          variant=\"unstyled\"\r\n          gap=\"10px\"\r\n          className=\"card-box\"\r\n        >\r\n          <CardHeader display=\"flex\" justifyContent=\"start\">\r\n            <Heading className=\"title card-title\" size=\"md\">\r\n              {x.title}\r\n            </Heading>\r\n          </CardHeader>\r\n          <Box className=\"card-container\">\r\n            <Image\r\n              className=\"card-thumbnail\"\r\n              objectFit=\"cover\"\r\n              src={x.thumbnail}\r\n              alt=\"post\"\r\n              onClick={() => navigate(`/projects/article/${x.path}?origin=${selectedTab}`)}\r\n            />\r\n            <Stack className=\"card-content\" padding=\"10px\">\r\n              <CardBody\r\n                onClick={() => navigate(`/projects/article/${x.path}?origin=${selectedTab}`)}\r\n              >\r\n                <Text className=\"card-desc\" fontSize={{ sm:\"12px\", md: \"14px\", lg: \"16px\" }} py=\"2\" color=\"white\">{x.description}</Text>\r\n              </CardBody>\r\n              <CardFooter alignSelf=\"flex-end\">\r\n                <Button\r\n                  variant=\"link\"\r\n                  color=\"white\"\r\n                  onClick={() => navigate(`/projects/article/${x.path}?origin=${selectedTab}`)}\r\n                >\r\n                  READ MORE\r\n                </Button>\r\n              </CardFooter>\r\n            </Stack>\r\n          </Box>\r\n        </Card>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      {/* <img src={pageBgDivider} alt=\"page-bg-divider\" /> */}\r\n      <div style={{height: \"140px\", backgroundColor: \"#33557b\"}}></div>\r\n      <Heading className=\"title\" size=\"lg\" alignSelf=\"center\" marginTop=\"30px\">\r\n        <Button\r\n          variant=\"link\"\r\n          className={selectedTab === 'commercial' ? \"title\" : \"unselected\"}\r\n          onClick={() => {\r\n            fetchData(\"projects-commercial\");\r\n            setSelectedTab('commercial');\r\n          }}\r\n        >\r\n          COMMERCIAL\r\n        </Button>{\" \"}\r\n        |{\" \"}\r\n        <Button\r\n          variant=\"link\"\r\n          className={selectedTab === 'residential' ? \"title\" : \"unselected\"}\r\n          onClick={() => {\r\n            fetchData(\"projects-residential\");\r\n            setSelectedTab('residential');\r\n          }}\r\n        >\r\n          RESIDENTIAL\r\n        </Button>\r\n      </Heading>\r\n      <Box maxWidth=\"8xl\" margin=\"40px 80px\" alignSelf=\"center\">\r\n        {data.length > 0 ? (\r\n          <SimpleGrid className=\"card-grid\" rowGap=\"50px\" columnGap=\"80px\"  columns={2}>\r\n            {projectList()}\r\n          </SimpleGrid>\r\n        ) : (\r\n          <Text>No post yet.</Text>\r\n        )}\r\n        <ResponsivePagination\r\n          total={totalPages}\r\n          current={currentPage}\r\n          onPageChange={(page) => handlePageChange(page)}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["Projects","data","setData","useState","selectedTab","setSelectedTab","currentPage","setCurrentPage","totalData","setTotalData","totalPages","useMemo","Math","ceil","length","navigate","useNavigate","useEffect","fetchData","slice","path","fetch","then","response","json","_jsxs","Box","display","flexDirection","children","_jsx","style","height","backgroundColor","Heading","className","size","alignSelf","marginTop","Button","variant","onClick","maxWidth","margin","SimpleGrid","rowGap","columnGap","columns","map","x","Card","gap","CardHeader","justifyContent","title","Image","objectFit","src","thumbnail","alt","Stack","padding","CardBody","Text","fontSize","sm","md","lg","py","color","description","CardFooter","id","ResponsivePagination","total","current","onPageChange","page","handlePageChange"],"sourceRoot":""}